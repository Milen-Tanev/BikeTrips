@using BikeTrips.Web.ViewModels.TripModels
@model CreateTripViewModel

@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("Create", "Trip", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4 class="page-title">Create new trip</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.TripName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.TripName, new { @class = "form-control" })
                Choose a name for your trip
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.StartingPoint, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.StartingPoint, new { @class = "form-control" })
                Type the starting address of the trip
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Type, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(m => m.Type, "Choose trip type", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Type)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.TripDate, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.TripDate, new { @class = "form-control", type = "date" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.TripTime, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.TripTime, new { @class = "form-control", type = "time" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Distance, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Distance, new { @class = "form-control col-xs-2" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Denivelation, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Denivelation, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextArea("Description", "Additioinal information", 10, 5, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Create" />
            </div>
        </div>
        @Html.HiddenFor(m => m.LocalTimeOffsetMinutes, new { id = "hiddenUserLoginDate" })
    }
    
}
else
{
    <h1>Please log in to create a new trip</h1>
}
@section Scripts
    {
    <script src="~/Scripts/Custom/getTimeOffset.js"></script>
    <script src="~/Scripts/Custom/redirectAfterWait.js"></script>
}