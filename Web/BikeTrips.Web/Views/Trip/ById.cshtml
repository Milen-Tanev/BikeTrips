@using BikeTrips.Services.Web;
@using BikeTrips.Web.ViewModels.TripModels
@model FullTripViewModel

@{
    ViewBag.Title = Model.TripName;
}
<div class="row">
    <div class="information-container">
        <h2 class="page-title">Name: @Model.TripName</h2>

        <div id="buttons-container">
            @Html.Partial("_ButtonsPartial", Model)
        </div>

        <p class="text-medium">@Model.Type.GetDescription()</p>
        <p class="text-medium">Starting in: @Model.StartingPoint</p>
        <p class="text-medium">On: @Model.StartingTime</p>

        Distance length: @Model.Distance km.
        @if (Model.Denivelation > 0.5)
        {
            <p>Denivelation: @Model.Denivelation m.</p>
        }
        <p>Details: @Model.Description</p>
        <p>Created by @Model.User</p>
        <div class="participants-container">
            @if (Model.Participants.Count <= 0)
            {
                <p class="text-medium">This events has no participants currently</p>
            }
            else if (Model.Participants.Count == 1)
            {
                @Html.Partial("_ParticipantsPartial", Model)
                <p>/This event has 1 participant/</p>
            }
            else
            {
                @Html.Partial("_ParticipantsPartial", Model)
                <p>/This event has @Model.Participants.Count participants/</p>
            }
        </div>
    </div>

    @if (User.Identity.IsAuthenticated)
    {
        <div class="chat-container">
            @Html.Partial("_ChatPartial")
        </div>
    }
</div>
@section scripts{
    <script src="~/Scripts/jquery.signalR-2.1.1.js" type="text/javascript"></script>
    <script src="~/SignalR/hubs" type="text/javascript"></script>

    <script>
        $(document).ready(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                if (name == "@Context.User.Identity.Name") {
                    $('#discussion').append('<li class="current-user"><strong>' + htmlEncode(name)
                        + '</strong>: ' + htmlEncode(message) + '</li>');
                    console.log("user");
                }
                else {
                    $('#discussion').append('<li class="other-user"><strong>' + htmlEncode(name)
                        + '</strong>: ' + htmlEncode(message) + '</li>');
                }
            };

            // Start the connection.
            $.connection.hub.start().done(function () {
                var room = "@Model.UrlId";
                chat.server.join(room);

                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#message').val(), room);
                    // Clear text box and reset focus for next comment.
                    $('#message').val('');
                });
            });
        });

        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
